{"ast":null,"code":"var _jsxFileName = \"/Users/nathanguy/Desktop/medium-to-portfolio/src/BlogTitle.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BlogTitle = props => {\n  const {\n    title,\n    link,\n    thumbnail,\n    content,\n    pubDate\n  } = props.blogData;\n\n  function blogPost() {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      href: `${link}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ImageContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${thumbnail}`,\n          alt: \"myImage\",\n          className: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"TDContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: truncateText(cleanTitle(title), 0, 60)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: truncateText(toText(content), 48, 300) + \"...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 72\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: convertDate(pubDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 16\n    }, this);\n  }\n\n  function cleanTitle(checkTitle) {\n    checkTitle = checkTitle.replace(\"amp;\", \"\");\n    return checkTitle;\n  }\n\n  function truncateText(text, start, len) {\n    return text.length > len ? text.slice(start, len) : text;\n  }\n\n  function toText(block) {\n    let tag = document.createElement('div');\n    tag.innerHTML = block;\n    block = tag.innerText;\n    return block;\n  }\n\n  function convertDate(date) {\n    let dateArray = date.slice(0, 10).split(\"-\");\n    let year = dateArray.shift();\n    dateArray.push(year);\n    console.log(date);\n    return `Published: ${dateArray.join(\"/\")}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostContainer\",\n    children: blogPost()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_c = BlogTitle;\nexport default BlogTitle;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogTitle\");","map":{"version":3,"sources":["/Users/nathanguy/Desktop/medium-to-portfolio/src/BlogTitle.js"],"names":["React","BlogTitle","props","title","link","thumbnail","content","pubDate","blogData","blogPost","truncateText","cleanTitle","toText","convertDate","checkTitle","replace","text","start","len","length","slice","block","tag","document","createElement","innerHTML","innerText","date","dateArray","split","year","shift","push","console","log","join"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,IAAT;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA,OAA1B;AAAmCC,IAAAA;AAAnC,MAA+CL,KAAK,CAACM,QAA3D;;AAEA,WAASC,QAAT,GAAoB;AAChB,wBAAO;AAAG,MAAA,MAAM,EAAC,QAAV;AAAmB,MAAA,GAAG,EAAC,qBAAvB;AAA6C,MAAA,IAAI,EAAG,GAAEL,IAAK,EAA3D;AAAA,8BACH;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,+BACI;AAAK,UAAA,GAAG,EAAG,GAAEC,SAAU,EAAvB;AAA0B,UAAA,GAAG,EAAC,SAA9B;AAAwC,UAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADG,eAIH;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAA,oBAAKK,YAAY,CAACC,UAAU,CAACR,KAAD,CAAX,EAAoB,CAApB,EAAuB,EAAvB;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADJ,eACqD;AAAA;AAAA;AAAA;AAAA,gBADrD,eAEI;AAAA,oBAAIO,YAAY,CAACE,MAAM,CAACN,OAAD,CAAP,EAAkB,EAAlB,EAAsB,GAAtB,CAAZ,GAAyC;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAE2D;AAAA;AAAA;AAAA;AAAA,gBAF3D,eAGI;AAAA,oBAAKO,WAAW,CAACN,OAAD;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAWH;;AAED,WAASI,UAAT,CAAoBG,UAApB,EAAgC;AAC5BA,IAAAA,UAAU,GAAGA,UAAU,CAACC,OAAX,CAAmB,MAAnB,EAA2B,EAA3B,CAAb;AACA,WAAOD,UAAP;AACH;;AAED,WAASJ,YAAT,CAAsBM,IAAtB,EAA4BC,KAA5B,EAAmCC,GAAnC,EAAwC;AACpC,WAAOF,IAAI,CAACG,MAAL,GAAcD,GAAd,GAAoBF,IAAI,CAACI,KAAL,CAAWH,KAAX,EAAkBC,GAAlB,CAApB,GAA6CF,IAApD;AACH;;AAED,WAASJ,MAAT,CAAgBS,KAAhB,EAAuB;AACnB,QAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;AACAF,IAAAA,GAAG,CAACG,SAAJ,GAAgBJ,KAAhB;AACAA,IAAAA,KAAK,GAAGC,GAAG,CAACI,SAAZ;AACA,WAAOL,KAAP;AACH;;AAED,WAASR,WAAT,CAAqBc,IAArB,EAA2B;AACvB,QAAIC,SAAS,GAAGD,IAAI,CAACP,KAAL,CAAW,CAAX,EAAc,EAAd,EAAkBS,KAAlB,CAAwB,GAAxB,CAAhB;AACA,QAAIC,IAAI,GAAGF,SAAS,CAACG,KAAV,EAAX;AACAH,IAAAA,SAAS,CAACI,IAAV,CAAeF,IAAf;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,WAAQ,cAAaC,SAAS,CAACO,IAAV,CAAe,GAAf,CAAoB,EAAzC;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cACK1B,QAAQ;AADb;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA9CD;;KAAMR,S;AAgDN,eAAeA,SAAf","sourcesContent":["import React from 'react';\n\nconst BlogTitle = (props) => {\n    const { title, link, thumbnail, content, pubDate } = props.blogData;\n    \n    function blogPost() {\n        return <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${link}`}>\n            <div className=\"ImageContainer\">\n                <img src={`${thumbnail}`} alt=\"myImage\" className=\"Image\"></img>\n            </div>\n            <div className=\"TDContainer\">\n                <h3>{truncateText(cleanTitle(title), 0, 60)}</h3><br />\n                <p>{truncateText(toText(content), 48, 300) + \"...\"}</p><br />\n                <h4>{convertDate(pubDate)}</h4>\n            </div>\n        </a>\n\n    }\n\n    function cleanTitle(checkTitle) {\n        checkTitle = checkTitle.replace(\"amp;\", \"\");\n        return checkTitle\n    }\n\n    function truncateText(text, start, len) {\n        return text.length > len ? text.slice(start, len) : text;\n    }\n\n    function toText(block) {\n        let tag = document.createElement('div');\n        tag.innerHTML = block;\n        block = tag.innerText;\n        return block\n    }\n\n    function convertDate(date) {\n        let dateArray = date.slice(0, 10).split(\"-\")\n        let year = dateArray.shift();\n        dateArray.push(year)\n        console.log(date)\n        return `Published: ${dateArray.join(\"/\")}`;\n    }\n    \n    return (\n        <div className=\"PostContainer\">\n            {blogPost()}\n        </div>\n    );\n}\n\nexport default BlogTitle;"]},"metadata":{},"sourceType":"module"}